// src/pages/FavoritesPage.tsx
import React, { useState } from 'react'
import { Link } from 'react-router-dom'
import { useGetFavoritesQuery, useRemoveFromFavoritesMutation } from '../../store/api/institutionsApi'
import { useAuth } from '../../providers/AuthProvider'
// import { formatters } from '../../hooks/formatters'
import { LoadingSpinner, LoadingCard } from '../../components/Loading'
import { SimplePagination } from '../../components/Pagination'
import { useDocumentTitle } from '../../hooks/useDocumentTitle'
import { InstitutionCard } from '../institutionsCard'

const FavoritesPage: React.FC = () => {
  useDocumentTitle('–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è')
  const { user } = useAuth()
  const [currentPage, setCurrentPage] = useState(1)
  const [removingIds, setRemovingIds] = useState<Set<number>>(new Set())

  const { data, isLoading, error, refetch } = useGetFavoritesQuery({
    page: currentPage,
    page_size: 12
  })

  const [removeFromFavorites] = useRemoveFromFavoritesMutation()

  const handleRemoveFromFavorites = async (institutionId: number) => {
    if (removingIds.has(institutionId)) return

    setRemovingIds(prev => new Set(prev).add(institutionId))
    
    try {
      await removeFromFavorites(institutionId).unwrap()
      // –ï—Å–ª–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é
      if (data && data.results.length === 1 && currentPage > 1) {
        setCurrentPage(prev => prev - 1)
      }
    } catch (error) {
      console.error('Error removing from favorites:', error)
    } finally {
      setRemovingIds(prev => {
        const newSet = new Set(prev)
        newSet.delete(institutionId)
        return newSet
      })
    }
  }

  const handlePageChange = (page: number) => {
    setCurrentPage(page)
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="mb-8">
            <div className="h-8 bg-gray-300 rounded w-64 animate-pulse mb-4"></div>
            <div className="h-4 bg-gray-300 rounded w-96 animate-pulse"></div>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <LoadingCard count={6} />
          </div>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">‚ö†Ô∏è</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-4">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
          </h1>
          <p className="text-gray-600 mb-6">
            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
          <button
            onClick={() => refetch()}
            className="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200"
          >
            <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
          </h1>
          <p className="text-gray-600">
            {user?.full_name ? `${user.full_name}, –≤` : '–í'}—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –∏—Ö –∑–¥–µ—Å—å
          </p>
        </div>

        {data?.results.length ? (
          <>
            {/* –°—á–µ—Ç—á–∏–∫ */}
            <div className="flex items-center justify-between mb-6">
              <p className="text-gray-700">
                {data.count === 1 
                  ? '1 –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ'
                  : `${data.count} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π`
                }
              </p>
              
              {/* –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
              <button
                onClick={() => {
                  if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ?')) {
                    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å batch —É–¥–∞–ª–µ–Ω–∏–µ –≤ API
                    data.results.forEach(favorite => {
                      handleRemoveFromFavorites(favorite.institution.id)
                    })
                  }
                }}
                className="text-red-600 hover:text-red-700 text-sm font-medium"
              >
                –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
              </button>
            </div>

            {/* –°–µ—Ç–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π */}
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
              {data.results.map((favorite) => {
                const { institution } = favorite
                const isRemoving = removingIds.has(institution.id)
                
                return (
                  <div
                    key={favorite.id}
                    className={`relative ${isRemoving ? 'opacity-50 pointer-events-none' : ''}`}
                  >
                    <InstitutionCard 
                      institution={institution} 
                      showFullAddress={true}
                    />
                    
                    {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
                    <button
                      onClick={(e) => {
                        e.preventDefault()
                        e.stopPropagation()
                        handleRemoveFromFavorites(institution.id)
                      }}
                      disabled={isRemoving}
                      className="absolute top-3 right-3 bg-red-500 hover:bg-red-600 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm opacity-0 group-hover:opacity-100 transition-opacity disabled:opacity-50 z-10"
                      title="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
                    >
                      {isRemoving ? (
                        <LoadingSpinner size="sm" />
                      ) : (
                        <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                        </svg>
                      )}
                    </button>
                  </div>
                )
              })}
            </div>

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            {data.total_pages > 1 && (
              <SimplePagination
                currentPage={data.current_page}
                totalPages={data.total_pages}
                onPageChange={handlePageChange}
                className="flex justify-center"
              />
            )}
          </>
        ) : (
          /* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
          <div className="text-center py-16">
            <div className="text-6xl mb-6">üíù</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-4">
              –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π
            </h3>
            <p className="text-gray-600 mb-8 max-w-md mx-auto">
              –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –¥–µ—Ç—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –Ω–∞–∂–∏–º–∞—è –Ω–∞ —Å–µ—Ä–¥–µ—á–∫–æ ‚ô•
            </p>
            <div className="space-y-4 sm:space-y-0 sm:space-x-4 sm:flex sm:justify-center">
              <Link
                to="/institutions"
                className="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200"
              >
                <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                –ù–∞–π—Ç–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
              </Link>
              <Link
                to="/submit"
                className="inline-flex items-center px-6 py-3 border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 rounded-lg transition-colors duration-200"
              >
                <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                </svg>
                –î–æ–±–∞–≤–∏—Ç—å —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ
              </Link>
            </div>
          </div>
        )}

        {/* –°–æ–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é */}
        {data?.results.length && data.results.length > 0 && (
          <div className="mt-12 bg-blue-50 rounded-lg p-6">
            <div className="flex items-start">
              <div className="flex-shrink-0">
                <svg className="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div className="ml-4">
                <h4 className="text-lg font-semibold text-blue-900 mb-2">
                  –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
                </h4>
                <ul className="text-blue-800 space-y-1 text-sm">
                  <li>‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ —É—Å–ª—É–≥–∏ –º–µ–∂–¥—É –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏</li>
                  <li>‚Ä¢ –ó–≤–æ–Ω–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –º–µ—Å—Ç</li>
                  <li>‚Ä¢ –ü–æ—Å–µ—â–∞–π—Ç–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –ª–∏—á–Ω–æ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏—è</li>
                  <li>‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</li>
                </ul>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

export default FavoritesPage