import React from 'react'
import { useNavigate, useSearchParams } from 'react-router-dom'
import { useGetInstitutionTypesQuery } from '../store/api/institutionsApi'
import { LoadingSpinner } from './Loading'

// interface Category {
//   id: number
//   name: string
//   description: string
//   icon: string
//   count?: number
// }

// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–æ–≤ –∏–∫–æ–Ω–∫–∞–º
const typeIcons: Record<string, string> = {
  '–î–µ—Ç—Å–∫–∏–π —Å–∞–¥': 'üè†',
  '–ö—Ä—É–∂–æ–∫': 'üé®', 
  '–°–ø–æ—Ä—Ç': '‚öΩ',
  '–Ø–∑—ã–∫–æ–≤—ã–µ —à–∫–æ–ª—ã': 'üìö',
  '–°–ø–æ—Ä—Ç—Å–µ–∫—Ü–∏—è': 'üèÉ',
  '–î–µ—Ç—Å–∫–∏–µ —Å–∞–¥—ã': 'üè´',
  '–Ø—Å–ª–∏': 'üë∂',
  // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}

const CategoryFilter: React.FC = () => {
  const navigate = useNavigate()
  const [searchParams] = useSearchParams()
  const { data: institutionTypes, isLoading } = useGetInstitutionTypesQuery()
  
  const currentTypeId = searchParams.get('institution_type_id')

  const handleCategoryClick = (typeId: number) => {
    const params = new URLSearchParams(searchParams)
    
    if (currentTypeId === String(typeId)) {
      // –ï—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω —ç—Ç–æ—Ç —Ç–∏–ø, —É–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä
      params.delete('institution_type_id')
    } else {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä
      params.set('institution_type_id', String(typeId))
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –ø–µ—Ä–≤—É—é –ø—Ä–∏ —Å–º–µ–Ω–µ —Ñ–∏–ª—å—Ç—Ä–∞
    params.delete('page')
    
    navigate(`/institutions?${params.toString()}`)
  }

  const handleShowAll = () => {
    const params = new URLSearchParams(searchParams)
    params.delete('institution_type_id')
    params.delete('page')
    navigate(`/institutions?${params.toString()}`)
  }

  if (isLoading) {
    return (
      <div className="flex justify-center py-8">
        <LoadingSpinner />
      </div>
    )
  }

  if (!institutionTypes || institutionTypes.length === 0) {
    return null
  }

  return (
    <div className="bg-white py-12">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-10">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">
            –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∞—à–µ–º—É —Ä–µ–±–µ–Ω–∫—É
          </p>
        </div>

        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-8">
          {/* –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" */}
          <button
            onClick={handleShowAll}
            className={`group p-6 rounded-xl transition-all duration-300 text-center hover:shadow-lg ${
              !currentTypeId
                ? 'bg-blue-50 border-2 border-blue-200 shadow-md'
                : 'bg-gray-50 border border-gray-200 hover:bg-gray-100'
            }`}
          >
            <div className="text-4xl mb-3">üåü</div>
            <h3 className={`font-semibold mb-2 ${
              !currentTypeId ? 'text-blue-600' : 'text-gray-900'
            }`}>
              –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            </h3>
            <p className="text-sm text-gray-600">
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
            </p>
          </button>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∏–ø–æ–≤ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π */}
          {institutionTypes.map((type) => {
            const isSelected = currentTypeId === String(type.id)
            const icon = typeIcons[type.name] || 'üè¢'
            
            return (
              <button
                key={type.id}
                onClick={() => handleCategoryClick(type.id)}
                className={`group p-6 rounded-xl transition-all duration-300 text-center hover:shadow-lg ${
                  isSelected
                    ? 'bg-blue-50 border-2 border-blue-200 shadow-md'
                    : 'bg-gray-50 border border-gray-200 hover:bg-gray-100'
                }`}
              >
                <div className="text-4xl mb-3">{icon}</div>
                <h3 className={`font-semibold mb-2 ${
                  isSelected ? 'text-blue-600' : 'text-gray-900'
                }`}>
                  {type.name}
                </h3>
                <p className="text-sm text-gray-600 line-clamp-2">
                  {type.description || '–ù–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞'}
                </p>
              </button>
            )
          })}
        </div>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ */}
        {currentTypeId && (
          <div className="flex items-center justify-center">
            <div className="bg-blue-100 text-blue-800 px-4 py-2 rounded-full text-sm font-medium">
              –§–∏–ª—å—Ç—Ä: {institutionTypes.find(t => t.id === Number(currentTypeId))?.name}
              <button
                onClick={handleShowAll}
                className="ml-2 text-blue-600 hover:text-blue-800"
              >
                ‚úï
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

export default CategoryFilter